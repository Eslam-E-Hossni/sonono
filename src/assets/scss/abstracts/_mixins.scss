/// This Mixins For Media Query
/// @param {point} [ sm, md, lg, xl, xxl, xxl, 3xl ]
/// @return {media-query} => this return media query breakpoint

@mixin mq($point) {
  @if $point == sm {
    @media(min-width: 357px) { @content; }
  }
  @else if $point == md {
    @media(min-width: 768px) { @content; }
  }
  @else if $point == lg {
    @media(min-width: 992px) { @content; }
  }
  @else if $point == xl {
    @media(min-width: 1200px) { @content; }
  }
  @else if $point == xxl {
    @media(min-width: 1400px) { @content; }
  }
  @else if $point == 3xl {
    @media(min-width: 1600px) { @content; }
  }

}

/*
 ** Animation Mixin For All Browser
 ** Accept Argument => Animation Name
 ** Example: @include keyframes(SlideUpAndDown)
*/

@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}

/*
 ** Overlay Mixin
 ** Accept Argument => Color
 ** Example: @include overlay(black, .5);
*/

@mixin overlay($color, $opacity) {
  position: absolute;
  inset: 0;
  background-color: rgba($color, $opacity);
}


/*
 ** Center Element Horizontally and Vertically
 ** Accept No Arguments
 ** Example: @include centerer();
*/

@mixin centerer() {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%)
}

/*
 ** Circle Mixin
 ** Accept Argument => Dimensions
 ** Example: @include circle(100px);
*/

@mixin circle($dimension) {
  width: $dimension;
  height: $dimension;
  border-radius: 50%;
}
